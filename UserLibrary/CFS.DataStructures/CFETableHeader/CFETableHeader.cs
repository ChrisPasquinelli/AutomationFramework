//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CFS.DataStructures {
    using System;
    using MTI.Core;
    
    
    [MTI.Core.ProvideAttribute(Categories=new string[] {
            "CFS.DataStructures"})]
    public partial class CFETableHeader : MTI.Core.Component {
        
        private uint _Reserved;
        
        private uint _Offset;
        
        private uint _NumBytes;
        
        private string _TableName;
        
        public CFETableHeader() {
            // 
            // Construct _Reserved
            // 
            this._Reserved = CFETableHeader.CreateReserved();
            // 
            // Construct _Offset
            // 
            this._Offset = CFETableHeader.CreateOffset();
            // 
            // Construct _NumBytes
            // 
            this._NumBytes = CFETableHeader.CreateNumBytes();
            // 
            // Construct _TableName
            // 
            this._TableName = CFETableHeader.CreateTableName();
            // 
            // Connect Graph
            // 
            this.Connect();
        }
        
        public virtual uint Reserved {
            get {
                return this._Reserved;
            }
            set {
                this._Reserved = value;
                this.OnPropertyChanged("Reserved");
            }
        }
        
        public virtual uint Offset {
            get {
                return this._Offset;
            }
            set {
                this._Offset = value;
                this.OnPropertyChanged("Offset");
            }
        }
        
        public virtual uint NumBytes {
            get {
                return this._NumBytes;
            }
            set {
                this._NumBytes = value;
                this.OnPropertyChanged("NumBytes");
            }
        }
        
        public virtual string TableName {
            get {
                return this._TableName;
            }
            set {
                this._TableName = value;
                this.OnPropertyChanged("TableName");
            }
        }
        
        public virtual void Connect() {
            // 
            // Connects subcomponents into graph 
            // 
        }
        
        public override bool OnInitialize() {
            // 
            // Initialize subcomponents
            // 
            return base.OnInitialize();
        }
    }
}
