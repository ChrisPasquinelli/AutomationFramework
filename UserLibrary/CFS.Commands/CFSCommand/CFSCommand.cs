//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CFS.Commands {
    using System;
    using MTI.Core;
    using GES.Communications;
    using CFS.DataStructures;
    
    
    [MTI.Core.ProvideAttribute(Categories=new string[] {
            "CFS.Commands"})]
    public partial class CFSCommand : GES.Communications.CCSDSCommand {
        
        private GES.Communications.CCSDSPacketDefinition _CCSDSPacketDefinition;
        
        private CFS.DataStructures.CommandSecondaryHeader _CommandSecondaryHeader;
        
        private GES.Communications.XORChecksum _XORChecksum;
        
        public CFSCommand() {
            // 
            // Initialize base members
            // 
            this.InitializeBaseMembers();
            // 
            // Construct _CCSDSPacketDefinition
            // 
            this._CCSDSPacketDefinition = CFSCommand.CreateCCSDSPacketDefinition();
            // 
            // Construct _CommandSecondaryHeader
            // 
            this._CommandSecondaryHeader = CFSCommand.CreateCommandSecondaryHeader();
            // 
            // Construct _XORChecksum
            // 
            this._XORChecksum = CFSCommand.CreateXORChecksum();
            // 
            // Connect Graph
            // 
            this.Connect();
        }
        
        public new virtual GES.Communications.CCSDSPacketDefinition PacketDefinition {
            get {
                return base.PacketDefinition;
            }
            set {
                base.PacketDefinition = value;
                this.OnPropertyChanged("CCSDSCommand.PacketDefinition");
            }
        }
        
        public virtual GES.Communications.CCSDSPacketDefinition CCSDSPacketDefinition {
            get {
                return this._CCSDSPacketDefinition;
            }
            set {
                this._CCSDSPacketDefinition = value;
                this.OnPropertyChanged("CCSDSPacketDefinition");
            }
        }
        
        [MTI.Core.RequireAttribute(Cut=true, Alias="CCSDSPacketDefinition.ApplicationData")]
        public virtual object ApplicationData {
            get {
                return this._CCSDSPacketDefinition.ApplicationData;
            }
            set {
                this._CCSDSPacketDefinition.ApplicationData = value;
                this.OnPropertyChanged("CCSDSPacketDefinition.ApplicationData");
            }
        }
        
        public virtual CFS.DataStructures.CommandSecondaryHeader CommandSecondaryHeader {
            get {
                return this._CommandSecondaryHeader;
            }
            set {
                this._CommandSecondaryHeader = value;
                this.OnPropertyChanged("CommandSecondaryHeader");
            }
        }
        
        public virtual GES.Communications.XORChecksum XORChecksum {
            get {
                return this._XORChecksum;
            }
            set {
                this._XORChecksum = value;
                this.OnPropertyChanged("XORChecksum");
            }
        }
        
        private void InitializeBaseMembers() {
            // 
            // Creates a new instance of the GES.Communications.CCSDSCommand class CCSDSCommand.
            // 
        }
        
        public virtual void Connect() {
            // 
            // Connects subcomponents into graph 
            // 
            this.Connect("base.PacketDefinition", "CCSDSPacketDefinition");
            this.Connect("CCSDSPacketDefinition.SecondaryHeader", "CommandSecondaryHeader");
            this.Connect("CCSDSPacketDefinition.Checksum", "XORChecksum");
        }
        
        public override bool OnInitialize() {
            // 
            // Initialize subcomponents
            // 
            return base.OnInitialize();
        }
    }
}
